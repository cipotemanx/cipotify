<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAA
        AABMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAQFDhJUBQ431BUeS/QVHk6UFR5P1AUOP9Pk3b6TVC
        usA0QbZ+M0C2JkxwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAEBQ
        4iRBUeSuQVHk/EBQ4/5BUeT/QVHk/0FR5P89TNf+NEG4/zNAtf40Qbb/NEG2/TRBtq40QbckTHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAQFDjYUBQ4/RAUOP+QFDj/kBQ4/5AUOP+QFDj/jtK
        0v40Qbb+M0C1/jNAtf4zQLX+M0C1/jNAtf40Qbb0NEG2YkxwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBBUeR8QVHk/kBQ4/5BUeT/QVHk/0BQ4/5AUOP/OkjM/zRBtv8zQLX+NEG2/zNAtf40Qbb/NEG2/zNA
        tf40Qbb/NEG2/jRBtn1McEcATHBHAExwRwBMcEcATHBHAEBQ42FBUeT+QVHk/0BQ4/5BUeT/QVHk/0BQ
        4v44Rsb/NEG2/zRBtv8zQLX+NEG2/zNAtf40Qbb/NEG2/zNAtf40Qbb/NEG2/zRBtv40QbZiTHBHAExw
        RwBMcEcAQFDiJEBQ4/RAUOP+QFDj/kBQ4/5AUOP+TGrl/nC25P53xt/+aanW/kNgv/4zQLX+M0C1/jNA
        tf4zQLX+M0C1/jNAtf4zQLX+M0C1/jNAtf40Qbb1NEG3JExwRwBMcEcAQVHkrkBQ4/5BUeT/QVHk/0BQ
        4/5BUeT/fdDt/5H67/6S+/D/kvvw/5D37v9Qecf+NEG2/zNAtf40Qbb/NEG2/zNAtf40Qbb/NEG2/zNA
        tf40Qbb/NEG2rkxwRwBAUOElQVHk/EBQ4/5BUeT/QVHk/0BQ4/5BUeT/aqfq/5H67/6S+/D/kvvw/5L7
        8P92xd/+NEG2/zNAtf40Qbb/NEG2/zNAtf40Qbb/NEG2/zNAtf40Qbb/NEG2/TRBtyZAUON9QFDj/kBQ
        4/5AUOP+QFDj/kBQ4/5AUOP+QVHk/mCT6P6A1u3+i+3v/oHY7f5xut/+M0C1/jNAtf45TLn+OUu5/jNA
        tf4zQLX+M0C1/jNAtf4zQLX+M0C1/jRBtn5BUeS/QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0BQ
        4/5BUeT/QVHk/0FR5P9pqN7+NEG2/zNAtf5Ja8P/WYrN/zNAtf40Qbb/NEG2/zNAtf40Qbb/NEG2/zdF
        wr9BUeTpQVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0FR5P9pqN7+NEG2/zNA
        tf41RLf/ZKDT/zNAtf40Qbb/NEG2/zNAtf40Qbb/OkjL/0BQ4+lBUeT9QVHk/0BQ4/5BUeT/QVHk/0BQ
        4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0FR5P9pqN7+NEG2/zNAtf40Qbb/XZLP/zNAtf40Qbb/NEG2/zRB
        t/48S9L/QVHk/0BQ4/1AUOP9QFDj/kBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ
        4/5pqN7+M0C1/jNAtf4zQLX+WIjM/jNAtf4zQLX+NUK5/j1N2P5AUOP+QFDj/kBQ4/1BUeTpQVHk/0BQ
        4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0FR5P9pqN7+NEG2/zNAtf41RLf/XJHP/zNA
        tf42Q73/P07d/0BQ4/5BUeT/QVHk/0BQ4+lAUOO/QFDj/kBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ
        4/5AUOP+QFDj/kBQ4/5pqN7+M0C1/jNAtf5hm9L+THHF/jdFwv5AUOH+QFDj/kBQ4/5AUOP+QFDj/kBQ
        479BUeR9QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0FR5P9pqN7+OUy5/2uv
        2P5+1OT/OkjJ/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0BQ431AUOMlQVHk/EBQ4/5BUeT/QVHk/0BQ
        4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0FR5P94xuj+iuvr/4rs7P5KZ9n/QFDj/0BQ4/5BUeT/QVHk/0BQ
        4/5BUeT/QVHk/EBQ4yVMcEcAQFDjrkBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ
        4/5/0+3+fdLl/kpn3/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDjrkxwRwBMcEcAQFDjJEBQ
        4/RBUeT/QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0FR5P9nouf+QFHd/0BQ4/5BUeT/QVHk/0BQ
        4/5BUeT/QVHk/0BQ4/5BUeT0QVHkJExwRwBMcEcATHBHAEBQ42FBUeT+QVHk/0BQ4/5BUeT/QVHk/0BQ
        4/5BUeT/QVHk/0FR5P9AUOP+QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeRhTHBHAExw
        RwBMcEcATHBHAExwRwBAUON8QFDj/kBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ
        4/5AUOP+QFDj/kBQ4/5AUOP+QFDj/kBQ43xMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAQVHkYUBQ
        4/RBUeT/QVHk/0BQ4/5BUeT/QVHk/0FR5P9AUOP+QVHk/0BQ4/5BUeT/QVHk/0BQ4/5BUeT0QVHkYUxw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAEBQ4yRBUeSuQVHk/EBQ4/5BUeT/QVHk/0FR
        5P9AUOP+QVHk/0BQ4/5BUeT/QVHk/EBQ465BUeQkTHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcAQFDjJUBQ431AUOO/QFDj6UBQ4/1AUOP9QFDj6UBQ479AUON9QFDjJUxw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwD+AH8A+AAfAPAADwDgAAcAwAADAIAAAQCAAAEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAQCAAAEAwAADAOAABwDwAA8A+AAfAP4A
        fwA=
</value>
  </data>
</root>